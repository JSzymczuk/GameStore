@model GameStore.ViewModels.PegiRatingViewModel

@{
    ViewBag.Title = "Dodaj ocenę wiekową";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main>
    <div class="wrapper">
        <div class="column">
            @Html.Partial("~/Views/Shared/_AdminMenu.cshtml")
        </div>
        <div class="column" style="float: left; margin-left: 50px;">

            @using (Html.BeginForm("CreateRating", "Pegi", FormMethod.Post, new { enctype = "multipart/form-data", role = "form", @class = "general-form" }))
            {
                <h2>Dodaj ocenę wiekową</h2>
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    <div class="form-input-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-input" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.ValidationMessageFor(model => model.SortIndex, "", new { @class = "text-danger" })
                    <div class="form-input-group">
                        @Html.LabelFor(model => model.SortIndex, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.SortIndex, htmlAttributes: new { @class = "form-input", @type = "number" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.ValidationMessageFor(model => model.IconLink, "", new { @class = "text-danger" })
                    <div class="form-input-group">
                        @Html.LabelFor(model => model.IconLink, htmlAttributes: new { @class = "form-label" })
                        <div class="file-upload-custom">
                            <input id="file-input-display" class="form-input" placeholder="Wybierz plik" disabled="disabled" />
                            <div class="file-upload-button">
                                <span>Wybierz</span>
                                @Html.TextBoxFor(model => model.IconLink, new { @id = "file-upload-file", @type = "file" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group" style="margin-top: 30px;">
                    @for (int i = 0; i < Model.Content.Count; i++)
                    {
                        @Html.HiddenFor(m => Model.Content[i].Value)
                        @Html.HiddenFor(m => Model.Content[i].Text)
                        <div class="form-input-group">
                            <span>@Html.DisplayFor(model => Model.Content[i].Text)</span>
                            @Html.CheckBoxFor(model => Model.Content[i].Selected, htmlAttributes: new
                               {
                                   @class = "form-input",
                                   style = "margin-left: 215px; margin-top: -8px;"
                               })
                            <span class="check-label"></span>
                        </div>
                    }
                </div>
                <button class="form-input" type="submit">Dodaj</button>
            }
        </div>
    </div>
</main>

<script>
    document.getElementById("file-upload-file").onchange = function () {
        document.getElementById("file-input-display").value = this.value;
    };
</script>