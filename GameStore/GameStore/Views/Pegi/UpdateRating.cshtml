@model GameStore.ViewModels.PegiRatingViewModel

@{
    ViewBag.Title = "Edytuj ocenę wiekową";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("UpdateRating", "Pegi", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IconLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IconLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IconLink, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int i = 0; i < Model.Content.Count; i++)
        {
            <div>
                @Html.HiddenFor(m => Model.Content[i].Value);
                @Html.HiddenFor(m => Model.Content[i].Text);

                @Html.CheckBoxFor(m => Model.Content[i].Selected);
                @Html.DisplayFor(m => Model.Content[i].Text);
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz zmiany" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót", "Index")
</div>
